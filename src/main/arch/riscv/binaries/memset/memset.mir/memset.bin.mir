memset.bin func void []
bb0:
MEM!1 = [9007199254740992, i64] Use [9007199254740992, i64] MEM
PC!1 = i64 Use i64 PC
XREG!1 = [32, i64] Use [32, i64] XREG
br label %bb1
bb1:
XREG!2 = store i64 0, [32, i64] XREG!1[0]
prev_pc!2 = store i64 PC!1, i64 prev_pc!1
%3 = load i64, [32, i64] XREG!2[2]
%2 = i64 Add i64 %3, -16
XREG!3 = store i64 %2, [32, i64] XREG!2[2]
%1 = i64 Add i64 PC!1, 4
PC!2 = store i64 %1, i64 PC!1
store i64 %1, i64 PC!3
PC!4 = store i64 PC!3, i64 PC!3
XREG!4 = store i64 0, [32, i64] XREG!3[0]
prev_pc!3 = store i64 PC!3, i64 prev_pc!2
%6 = load i64, [32, i64] XREG!4[2]
%5 = i64 Add i64 %6, 0
tmp_address!2 = store i64 %5, i64 tmp_address!1
%7 = load i64, [32, i64] XREG!4[8]
rs2_var!2 = store i64 %7, i64 rs2_var!1
%8 = i64 Lshr i64 %5, 3
%9 = Extract i53 of i64 %8 <52, 0>
mem_index!2 = store i53 %9, i53 mem_index!1
%10 = Extract i3 of i64 %5 <2, 0>
%11 = i1 Eq i3 %10, 0
br i1 %11, label %bb2, label %bb3
bb2:
MEM!4 = store i64 %7, [9007199254740992, i64] MEM!1[%9]
br label %bb4
bb3:
%12 = i53 Add i53 %9, 1
%13 = load i64, [9007199254740992, i64] MEM!1[%12]
tmp_dword1!2 = store i64 %13, i64 tmp_dword1!1
%14 = load i64, [9007199254740992, i64] MEM!1[%9]
tmp_dword2!2 = store i64 %14, i64 tmp_dword2!1
%15 = Extract i3 of i64 %5 <2, 0>
%16 = i1 Eq i3 %15, 1
br i1 %16, label %bb5, label %bb6
bb4:
MEM!5 = phi ite %11 MEM!4 MEM!3
tmp_dword2!11 = phi ite %11 tmp_dword2!1 tmp_dword2!3
tmp_dword1!11 = phi ite %11 tmp_dword1!1 tmp_dword1!3
%4 = i64 Add i64 PC!3, 4
PC!19 = store i64 %4, i64 PC!4
store i64 %4, i64 PC!5
PC!6 = store i64 PC!5, i64 PC!5
XREG!5 = store i64 0, [32, i64] XREG!4[0]
prev_pc!4 = store i64 PC!5, i64 prev_pc!3
%114 = load i64, [32, i64] XREG!5[2]
%113 = i64 Add i64 %114, 8
tmp_address!3 = store i64 %113, i64 tmp_address!2
%115 = load i64, [32, i64] XREG!5[1]
rs2_var!3 = store i64 %115, i64 rs2_var!2
%116 = i64 Lshr i64 %113, 3
%117 = Extract i53 of i64 %116 <52, 0>
mem_index!3 = store i53 %117, i53 mem_index!2
%118 = Extract i3 of i64 %113 <2, 0>
%119 = i1 Eq i3 %118, 0
br i1 %119, label %bb12, label %bb13
bb5:
%17 = i64 Lshr i64 %7, 56
%18 = Extract i8 of i64 %17 <7, 0>
%20 = Zext i8 %18 to i64
%21 = i64 And i64 %13, -256
%22 = i64 Shl i64 %20, 0
%19 = i64 Or i64 %21, %22
tmp_dword1!10 = store i64 %19, i64 tmp_dword1!2
%23 = i64 Lshr i64 %7, 0
%24 = Extract i56 of i64 %23 <55, 0>
%26 = Zext i56 %24 to i64
%27 = i64 And i64 %14, 255
%28 = i64 Shl i64 %26, 8
%25 = i64 Or i64 %27, %28
tmp_dword2!10 = store i64 %25, i64 tmp_dword2!2
br label %bb7
bb6:
%29 = Extract i3 of i64 %5 <2, 0>
%30 = i1 Eq i3 %29, 2
br i1 %30, label %bb8, label %bb9
bb7:
tmp_dword2!3 = phi ite %16 %25 ite %30 %39 ite %44 %53 ite %58 %67 ite %72 %81 ite %86 %95 %107
tmp_dword1!3 = phi ite %16 %19 ite %30 %33 ite %44 %47 ite %58 %61 ite %72 %75 ite %86 %89 %101
%111 = i53 Add i53 %9, 1
MEM!2 = store i64 tmp_dword1!3, [9007199254740992, i64] MEM!1[%111]
MEM!3 = store i64 tmp_dword2!3, [9007199254740992, i64] MEM!2[%9]
br label %bb4
bb8:
%31 = i64 Lshr i64 %7, 48
%32 = Extract i16 of i64 %31 <15, 0>
%34 = Zext i16 %32 to i64
%35 = i64 And i64 %13, -65536
%36 = i64 Shl i64 %34, 0
%33 = i64 Or i64 %35, %36
tmp_dword1!4 = store i64 %33, i64 tmp_dword1!2
%37 = i64 Lshr i64 %7, 0
%38 = Extract i48 of i64 %37 <47, 0>
%40 = Zext i48 %38 to i64
%41 = i64 And i64 %14, 65535
%42 = i64 Shl i64 %40, 16
%39 = i64 Or i64 %41, %42
tmp_dword2!4 = store i64 %39, i64 tmp_dword2!2
br label %bb7
bb9:
%43 = Extract i3 of i64 %5 <2, 0>
%44 = i1 Eq i3 %43, 3
br i1 %44, label %bb10, label %bb11
bb10:
%45 = i64 Lshr i64 %7, 40
%46 = Extract i24 of i64 %45 <23, 0>
%48 = Zext i24 %46 to i64
%49 = i64 And i64 %13, -16777216
%50 = i64 Shl i64 %48, 0
%47 = i64 Or i64 %49, %50
tmp_dword1!9 = store i64 %47, i64 tmp_dword1!2
%51 = i64 Lshr i64 %7, 0
%52 = Extract i40 of i64 %51 <39, 0>
%54 = Zext i40 %52 to i64
%55 = i64 And i64 %14, 16777215
%56 = i64 Shl i64 %54, 24
%53 = i64 Or i64 %55, %56
tmp_dword2!9 = store i64 %53, i64 tmp_dword2!2
br label %bb7
bb11:
%57 = Extract i3 of i64 %5 <2, 0>
%58 = i1 Eq i3 %57, -4
br i1 %58, label %bb14, label %bb15
bb12:
MEM!6 = store i64 %115, [9007199254740992, i64] MEM!5[%117]
br label %bb16
bb13:
%120 = i53 Add i53 %117, 1
%121 = load i64, [9007199254740992, i64] MEM!5[%120]
tmp_dword1!13 = store i64 %121, i64 tmp_dword1!11
%122 = load i64, [9007199254740992, i64] MEM!5[%117]
tmp_dword2!13 = store i64 %122, i64 tmp_dword2!11
%123 = Extract i3 of i64 %113 <2, 0>
%124 = i1 Eq i3 %123, 1
br i1 %124, label %bb17, label %bb18
bb14:
%59 = i64 Lshr i64 %7, 32
%60 = Extract i32 of i64 %59 <31, 0>
%62 = Zext i32 %60 to i64
%63 = i64 And i64 %13, -4294967296
%64 = i64 Shl i64 %62, 0
%61 = i64 Or i64 %63, %64
tmp_dword1!8 = store i64 %61, i64 tmp_dword1!2
%65 = i64 Lshr i64 %7, 0
%66 = Extract i32 of i64 %65 <31, 0>
%68 = Zext i32 %66 to i64
%69 = i64 And i64 %14, 4294967295
%70 = i64 Shl i64 %68, 32
%67 = i64 Or i64 %69, %70
tmp_dword2!8 = store i64 %67, i64 tmp_dword2!2
br label %bb7
bb15:
%71 = Extract i3 of i64 %5 <2, 0>
%72 = i1 Eq i3 %71, -3
br i1 %72, label %bb19, label %bb20
bb16:
MEM!7 = phi ite %119 MEM!6 MEM!9
tmp_dword2!12 = phi ite %119 tmp_dword2!11 tmp_dword2!21
tmp_dword1!12 = phi ite %119 tmp_dword1!11 tmp_dword1!21
%112 = i64 Add i64 PC!5, 4
PC!7 = store i64 %112, i64 PC!6
store i64 %112, i64 PC!8
PC!9 = store i64 PC!8, i64 PC!8
XREG!6 = store i64 0, [32, i64] XREG!5[0]
prev_pc!5 = store i64 PC!8, i64 prev_pc!4
%222 = load i64, [32, i64] XREG!6[10]
%221 = i64 Add i64 %222, 0
XREG!7 = store i64 %221, [32, i64] XREG!6[8]
%220 = i64 Add i64 PC!8, 4
PC!18 = store i64 %220, i64 PC!9
store i64 %220, i64 PC!10
PC!11 = store i64 PC!10, i64 PC!10
XREG!8 = store i64 0, [32, i64] XREG!7[0]
prev_pc!6 = store i64 PC!10, i64 prev_pc!5
%227 = load i64, [32, i64] XREG!8[12]
%228 = load i64, [32, i64] XREG!8[0]
%225 = i1 Eq i64 %227, %228
br i1 %225, label %bb32, label %bb33
bb17:
%125 = i64 Lshr i64 %115, 56
%126 = Extract i8 of i64 %125 <7, 0>
%128 = Zext i8 %126 to i64
%129 = i64 And i64 %121, -256
%130 = i64 Shl i64 %128, 0
%127 = i64 Or i64 %129, %130
tmp_dword1!14 = store i64 %127, i64 tmp_dword1!13
%131 = i64 Lshr i64 %115, 0
%132 = Extract i56 of i64 %131 <55, 0>
%134 = Zext i56 %132 to i64
%135 = i64 And i64 %122, 255
%136 = i64 Shl i64 %134, 8
%133 = i64 Or i64 %135, %136
tmp_dword2!14 = store i64 %133, i64 tmp_dword2!13
br label %bb21
bb18:
%137 = Extract i3 of i64 %113 <2, 0>
%138 = i1 Eq i3 %137, 2
br i1 %138, label %bb22, label %bb23
bb19:
%73 = i64 Lshr i64 %7, 24
%74 = Extract i40 of i64 %73 <39, 0>
%76 = Zext i40 %74 to i64
%77 = i64 And i64 %13, -1099511627776
%78 = i64 Shl i64 %76, 0
%75 = i64 Or i64 %77, %78
tmp_dword1!5 = store i64 %75, i64 tmp_dword1!2
%79 = i64 Lshr i64 %7, 0
%80 = Extract i24 of i64 %79 <23, 0>
%82 = Zext i24 %80 to i64
%83 = i64 And i64 %14, 1099511627775
%84 = i64 Shl i64 %82, 40
%81 = i64 Or i64 %83, %84
tmp_dword2!5 = store i64 %81, i64 tmp_dword2!2
br label %bb7
bb20:
%85 = Extract i3 of i64 %5 <2, 0>
%86 = i1 Eq i3 %85, -2
br i1 %86, label %bb24, label %bb25
bb21:
tmp_dword2!21 = phi ite %124 %133 ite %138 %147 ite %152 %161 ite %166 %175 ite %180 %189 ite %194 %203 %215
tmp_dword1!21 = phi ite %124 %127 ite %138 %141 ite %152 %155 ite %166 %169 ite %180 %183 ite %194 %197 %209
%219 = i53 Add i53 %117, 1
MEM!8 = store i64 tmp_dword1!21, [9007199254740992, i64] MEM!5[%219]
MEM!9 = store i64 tmp_dword2!21, [9007199254740992, i64] MEM!8[%117]
br label %bb16
bb22:
%139 = i64 Lshr i64 %115, 48
%140 = Extract i16 of i64 %139 <15, 0>
%142 = Zext i16 %140 to i64
%143 = i64 And i64 %121, -65536
%144 = i64 Shl i64 %142, 0
%141 = i64 Or i64 %143, %144
tmp_dword1!20 = store i64 %141, i64 tmp_dword1!13
%145 = i64 Lshr i64 %115, 0
%146 = Extract i48 of i64 %145 <47, 0>
%148 = Zext i48 %146 to i64
%149 = i64 And i64 %122, 65535
%150 = i64 Shl i64 %148, 16
%147 = i64 Or i64 %149, %150
tmp_dword2!20 = store i64 %147, i64 tmp_dword2!13
br label %bb21
bb23:
%151 = Extract i3 of i64 %113 <2, 0>
%152 = i1 Eq i3 %151, 3
br i1 %152, label %bb26, label %bb27
bb24:
%87 = i64 Lshr i64 %7, 16
%88 = Extract i48 of i64 %87 <47, 0>
%90 = Zext i48 %88 to i64
%91 = i64 And i64 %13, -281474976710656
%92 = i64 Shl i64 %90, 0
%89 = i64 Or i64 %91, %92
tmp_dword1!6 = store i64 %89, i64 tmp_dword1!2
%93 = i64 Lshr i64 %7, 0
%94 = Extract i16 of i64 %93 <15, 0>
%96 = Zext i16 %94 to i64
%97 = i64 And i64 %14, 281474976710655
%98 = i64 Shl i64 %96, 48
%95 = i64 Or i64 %97, %98
tmp_dword2!6 = store i64 %95, i64 tmp_dword2!2
br label %bb7
bb25:
%99 = i64 Lshr i64 %7, 8
%100 = Extract i56 of i64 %99 <55, 0>
%102 = Zext i56 %100 to i64
%103 = i64 And i64 %13, -72057594037927936
%104 = i64 Shl i64 %102, 0
%101 = i64 Or i64 %103, %104
tmp_dword1!7 = store i64 %101, i64 tmp_dword1!2
%105 = i64 Lshr i64 %7, 0
%106 = Extract i8 of i64 %105 <7, 0>
%108 = Zext i8 %106 to i64
%109 = i64 And i64 %14, 72057594037927935
%110 = i64 Shl i64 %108, 56
%107 = i64 Or i64 %109, %110
tmp_dword2!7 = store i64 %107, i64 tmp_dword2!2
br label %bb7
bb26:
%153 = i64 Lshr i64 %115, 40
%154 = Extract i24 of i64 %153 <23, 0>
%156 = Zext i24 %154 to i64
%157 = i64 And i64 %121, -16777216
%158 = i64 Shl i64 %156, 0
%155 = i64 Or i64 %157, %158
tmp_dword1!19 = store i64 %155, i64 tmp_dword1!13
%159 = i64 Lshr i64 %115, 0
%160 = Extract i40 of i64 %159 <39, 0>
%162 = Zext i40 %160 to i64
%163 = i64 And i64 %122, 16777215
%164 = i64 Shl i64 %162, 24
%161 = i64 Or i64 %163, %164
tmp_dword2!19 = store i64 %161, i64 tmp_dword2!13
br label %bb21
bb27:
%165 = Extract i3 of i64 %113 <2, 0>
%166 = i1 Eq i3 %165, -4
br i1 %166, label %bb28, label %bb29
bb28:
%167 = i64 Lshr i64 %115, 32
%168 = Extract i32 of i64 %167 <31, 0>
%170 = Zext i32 %168 to i64
%171 = i64 And i64 %121, -4294967296
%172 = i64 Shl i64 %170, 0
%169 = i64 Or i64 %171, %172
tmp_dword1!15 = store i64 %169, i64 tmp_dword1!13
%173 = i64 Lshr i64 %115, 0
%174 = Extract i32 of i64 %173 <31, 0>
%176 = Zext i32 %174 to i64
%177 = i64 And i64 %122, 4294967295
%178 = i64 Shl i64 %176, 32
%175 = i64 Or i64 %177, %178
tmp_dword2!15 = store i64 %175, i64 tmp_dword2!13
br label %bb21
bb29:
%179 = Extract i3 of i64 %113 <2, 0>
%180 = i1 Eq i3 %179, -3
br i1 %180, label %bb30, label %bb31
bb30:
%181 = i64 Lshr i64 %115, 24
%182 = Extract i40 of i64 %181 <39, 0>
%184 = Zext i40 %182 to i64
%185 = i64 And i64 %121, -1099511627776
%186 = i64 Shl i64 %184, 0
%183 = i64 Or i64 %185, %186
tmp_dword1!16 = store i64 %183, i64 tmp_dword1!13
%187 = i64 Lshr i64 %115, 0
%188 = Extract i24 of i64 %187 <23, 0>
%190 = Zext i24 %188 to i64
%191 = i64 And i64 %122, 1099511627775
%192 = i64 Shl i64 %190, 40
%189 = i64 Or i64 %191, %192
tmp_dword2!16 = store i64 %189, i64 tmp_dword2!13
br label %bb21
bb31:
%193 = Extract i3 of i64 %113 <2, 0>
%194 = i1 Eq i3 %193, -2
br i1 %194, label %bb34, label %bb35
bb32:
%226 = i64 Add i64 PC!10, 12
PC!17 = store i64 %226, i64 PC!11
br label %bb36
bb33:
br label %bb36
bb34:
%195 = i64 Lshr i64 %115, 16
%196 = Extract i48 of i64 %195 <47, 0>
%198 = Zext i48 %196 to i64
%199 = i64 And i64 %121, -281474976710656
%200 = i64 Shl i64 %198, 0
%197 = i64 Or i64 %199, %200
tmp_dword1!18 = store i64 %197, i64 tmp_dword1!13
%201 = i64 Lshr i64 %115, 0
%202 = Extract i16 of i64 %201 <15, 0>
%204 = Zext i16 %202 to i64
%205 = i64 And i64 %122, 281474976710655
%206 = i64 Shl i64 %204, 48
%203 = i64 Or i64 %205, %206
tmp_dword2!18 = store i64 %203, i64 tmp_dword2!13
br label %bb21
bb35:
%207 = i64 Lshr i64 %115, 8
%208 = Extract i56 of i64 %207 <55, 0>
%210 = Zext i56 %208 to i64
%211 = i64 And i64 %121, -72057594037927936
%212 = i64 Shl i64 %210, 0
%209 = i64 Or i64 %211, %212
tmp_dword1!17 = store i64 %209, i64 tmp_dword1!13
%213 = i64 Lshr i64 %115, 0
%214 = Extract i8 of i64 %213 <7, 0>
%216 = Zext i8 %214 to i64
%217 = i64 And i64 %122, 72057594037927935
%218 = i64 Shl i64 %216, 56
%215 = i64 Or i64 %217, %218
tmp_dword2!17 = store i64 %215, i64 tmp_dword2!13
br label %bb21
bb36:
PC!12 = phi ite %225 %226 PC!10
%223 = i1 Eq i64 PC!12, PC!10
br i1 %223, label %bb37, label %bb38
bb37:
%224 = i64 Add i64 PC!12, 4
PC!16 = store i64 %224, i64 PC!12
br label %bb39
bb38:
br label %bb39
bb39:
PC!13 = phi ite %225 %226 %224
PC!14 = store i64 PC!13, i64 PC!13
PC!15 = store i64 PC!13, i64 PC!14
br label %bb40
bb40:
MEM = [9007199254740992, i64] Use [9007199254740992, i64] MEM!7
PC = i64 Use i64 PC!15
XREG = [32, i64] Use [32, i64] XREG!8
PC!20 = i64 Use i64 PC
XREG!9 = [32, i64] Use [32, i64] XREG
br label %bb41
bb41:
XREG!2 = store i64 0, [32, i64] XREG!1[0]
prev_pc!2 = store i64 PC!1, i64 prev_pc!1
%3 = load i64, [32, i64] XREG!2[11]
%2 = i64 And i64 %3, 255
XREG!3 = store i64 %2, [32, i64] XREG!2[11]
%1 = i64 Add i64 PC!1, 4
PC!2 = store i64 %1, i64 PC!1
store i64 %1, i64 PC!3
PC!4 = store i64 PC!3, i64 PC!3
XREG!4 = store i64 0, [32, i64] XREG!3[0]
prev_pc!3 = store i64 PC!3, i64 prev_pc!2
%4 = i64 Add i64 PC!3, 4
XREG!5 = store i64 %4, [32, i64] XREG!4[1]
%5 = i64 Add i64 PC!3, -24
PC!5 = store i64 %5, i64 PC!4
store i64 %5, i64 PC!7
PC!8 = store i64 PC!7, i64 PC!7
PC!9 = store i64 PC!7, i64 PC!8
br label %bb42
bb42:
PC = i64 Use i64 PC!28
XREG = [32, i64] Use [32, i64] XREG!13
MEM!10 = [9007199254740992, i64] Use [9007199254740992, i64] MEM
PC!29 = i64 Use i64 PC
XREG!14 = [32, i64] Use [32, i64] XREG
br label %bb43
bb43:
XREG!2 = store i64 0, [32, i64] XREG!1[0]
prev_pc!2 = store i64 PC!1, i64 prev_pc!1
%3 = load i64, [32, i64] XREG!2[2]
%2 = i64 Add i64 %3, 8
tmp_address!2 = store i64 %2, i64 tmp_address!1
%4 = i64 Lshr i64 %2, 3
%5 = Extract i53 of i64 %4 <52, 0>
mem_index!2 = store i53 %5, i53 mem_index!1
%6 = Extract i3 of i64 %2 <2, 0>
%7 = i1 Eq i3 %6, 0
br i1 %7, label %bb44, label %bb45
bb44:
%8 = load i64, [9007199254740992, i64] MEM!1[%5]
tmp_dword!2 = store i64 %8, i64 tmp_dword!1
br label %bb46
bb45:
%9 = i53 Add i53 %5, 1
%10 = load i64, [9007199254740992, i64] MEM!1[%9]
tmp_dword1!2 = store i64 %10, i64 tmp_dword1!1
%11 = load i64, [9007199254740992, i64] MEM!1[%5]
tmp_dword2!2 = store i64 %11, i64 tmp_dword2!1
%12 = Extract i3 of i64 %2 <2, 0>
%13 = i1 Eq i3 %12, 1
br i1 %13, label %bb47, label %bb48
bb46:
tmp_dword!10 = phi ite %7 %8 ite %13 %14 ite %18 %19 ite %23 %24 ite %28 %29 ite %33 %34 ite %38 %39 %42
tmp_dword2!3 = phi ite %7 tmp_dword2!1 %11
tmp_dword1!3 = phi ite %7 tmp_dword1!1 %10
rd_var!2 = store i64 tmp_dword!10, i64 rd_var!1
XREG!3 = store i64 tmp_dword!10, [32, i64] XREG!2[1]
%1 = i64 Add i64 PC!1, 4
PC!18 = store i64 %1, i64 PC!1
store i64 %1, i64 PC!2
PC!3 = store i64 PC!2, i64 PC!2
XREG!4 = store i64 0, [32, i64] XREG!3[0]
prev_pc!3 = store i64 PC!2, i64 prev_pc!2
%47 = load i64, [32, i64] XREG!4[8]
%46 = i64 Add i64 %47, 0
XREG!5 = store i64 %46, [32, i64] XREG!4[10]
%45 = i64 Add i64 PC!2, 4
PC!4 = store i64 %45, i64 PC!3
store i64 %45, i64 PC!5
PC!6 = store i64 PC!5, i64 PC!5
XREG!6 = store i64 0, [32, i64] XREG!5[0]
prev_pc!4 = store i64 PC!5, i64 prev_pc!3
%50 = load i64, [32, i64] XREG!6[2]
%49 = i64 Add i64 %50, 0
tmp_address!3 = store i64 %49, i64 tmp_address!2
%51 = i64 Lshr i64 %49, 3
%52 = Extract i53 of i64 %51 <52, 0>
mem_index!3 = store i53 %52, i53 mem_index!2
%53 = Extract i3 of i64 %49 <2, 0>
%54 = i1 Eq i3 %53, 0
br i1 %54, label %bb57, label %bb58
bb47:
%15 = Extract i8 of i64 %10 <7, 0>
%16 = Extract i56 of i64 %11 <63, 8>
%14 = Concat i64 i8 %15, i56 %16
tmp_dword!3 = store i64 %14, i64 tmp_dword!1
br label %bb46
bb48:
%17 = Extract i3 of i64 %2 <2, 0>
%18 = i1 Eq i3 %17, 2
br i1 %18, label %bb49, label %bb50
bb49:
%20 = Extract i16 of i64 %10 <15, 0>
%21 = Extract i48 of i64 %11 <63, 16>
%19 = Concat i64 i16 %20, i48 %21
tmp_dword!9 = store i64 %19, i64 tmp_dword!1
br label %bb46
bb50:
%22 = Extract i3 of i64 %2 <2, 0>
%23 = i1 Eq i3 %22, 3
br i1 %23, label %bb51, label %bb52
bb51:
%25 = Extract i24 of i64 %10 <23, 0>
%26 = Extract i40 of i64 %11 <63, 24>
%24 = Concat i64 i24 %25, i40 %26
tmp_dword!8 = store i64 %24, i64 tmp_dword!1
br label %bb46
bb52:
%27 = Extract i3 of i64 %2 <2, 0>
%28 = i1 Eq i3 %27, -4
br i1 %28, label %bb53, label %bb54
bb53:
%30 = Extract i32 of i64 %10 <31, 0>
%31 = Extract i32 of i64 %11 <63, 32>
%29 = Concat i64 i32 %30, i32 %31
tmp_dword!7 = store i64 %29, i64 tmp_dword!1
br label %bb46
bb54:
%32 = Extract i3 of i64 %2 <2, 0>
%33 = i1 Eq i3 %32, -3
br i1 %33, label %bb55, label %bb56
bb55:
%35 = Extract i40 of i64 %10 <39, 0>
%36 = Extract i24 of i64 %11 <63, 40>
%34 = Concat i64 i40 %35, i24 %36
tmp_dword!4 = store i64 %34, i64 tmp_dword!1
br label %bb46
bb56:
%37 = Extract i3 of i64 %2 <2, 0>
%38 = i1 Eq i3 %37, -2
br i1 %38, label %bb59, label %bb60
bb57:
%55 = load i64, [9007199254740992, i64] MEM!1[%52]
tmp_dword!19 = store i64 %55, i64 tmp_dword!10
br label %bb61
bb58:
%56 = i53 Add i53 %52, 1
%57 = load i64, [9007199254740992, i64] MEM!1[%56]
tmp_dword1!5 = store i64 %57, i64 tmp_dword1!3
%58 = load i64, [9007199254740992, i64] MEM!1[%52]
tmp_dword2!5 = store i64 %58, i64 tmp_dword2!3
%59 = Extract i3 of i64 %49 <2, 0>
%60 = i1 Eq i3 %59, 1
br i1 %60, label %bb62, label %bb63
bb59:
%40 = Extract i48 of i64 %10 <47, 0>
%41 = Extract i16 of i64 %11 <63, 48>
%39 = Concat i64 i48 %40, i16 %41
tmp_dword!6 = store i64 %39, i64 tmp_dword!1
br label %bb46
bb60:
%43 = Extract i56 of i64 %10 <55, 0>
%44 = Extract i8 of i64 %11 <63, 56>
%42 = Concat i64 i56 %43, i8 %44
tmp_dword!5 = store i64 %42, i64 tmp_dword!1
br label %bb46
bb61:
tmp_dword!11 = phi ite %54 %55 ite %60 %61 ite %65 %66 ite %70 %71 ite %75 %76 ite %80 %81 ite %85 %86 %89
tmp_dword2!4 = phi ite %54 tmp_dword2!3 %58
tmp_dword1!4 = phi ite %54 tmp_dword1!3 %57
rd_var!3 = store i64 tmp_dword!11, i64 rd_var!2
XREG!7 = store i64 tmp_dword!11, [32, i64] XREG!6[8]
%48 = i64 Add i64 PC!5, 4
PC!17 = store i64 %48, i64 PC!6
store i64 %48, i64 PC!7
PC!8 = store i64 PC!7, i64 PC!7
XREG!8 = store i64 0, [32, i64] XREG!7[0]
prev_pc!5 = store i64 PC!7, i64 prev_pc!4
%94 = load i64, [32, i64] XREG!8[2]
%93 = i64 Add i64 %94, 16
XREG!9 = store i64 %93, [32, i64] XREG!8[2]
%92 = i64 Add i64 PC!7, 4
PC!9 = store i64 %92, i64 PC!8
store i64 %92, i64 PC!10
PC!11 = store i64 PC!10, i64 PC!10
XREG!10 = store i64 0, [32, i64] XREG!9[0]
prev_pc!6 = store i64 PC!10, i64 prev_pc!5
%97 = i64 Add i64 PC!10, 4
XREG!11 = store i64 %97, [32, i64] XREG!10[0]
%99 = load i64, [32, i64] XREG!11[1]
%98 = i64 Add i64 %99, 0
PC!12 = store i64 %98, i64 PC!11
%95 = i1 Eq i64 %98, PC!10
br i1 %95, label %bb72, label %bb73
bb62:
%62 = Extract i8 of i64 %57 <7, 0>
%63 = Extract i56 of i64 %58 <63, 8>
%61 = Concat i64 i8 %62, i56 %63
tmp_dword!18 = store i64 %61, i64 tmp_dword!10
br label %bb61
bb63:
%64 = Extract i3 of i64 %49 <2, 0>
%65 = i1 Eq i3 %64, 2
br i1 %65, label %bb64, label %bb65
bb64:
%67 = Extract i16 of i64 %57 <15, 0>
%68 = Extract i48 of i64 %58 <63, 16>
%66 = Concat i64 i16 %67, i48 %68
tmp_dword!17 = store i64 %66, i64 tmp_dword!10
br label %bb61
bb65:
%69 = Extract i3 of i64 %49 <2, 0>
%70 = i1 Eq i3 %69, 3
br i1 %70, label %bb66, label %bb67
bb66:
%72 = Extract i24 of i64 %57 <23, 0>
%73 = Extract i40 of i64 %58 <63, 24>
%71 = Concat i64 i24 %72, i40 %73
tmp_dword!12 = store i64 %71, i64 tmp_dword!10
br label %bb61
bb67:
%74 = Extract i3 of i64 %49 <2, 0>
%75 = i1 Eq i3 %74, -4
br i1 %75, label %bb68, label %bb69
bb68:
%77 = Extract i32 of i64 %57 <31, 0>
%78 = Extract i32 of i64 %58 <63, 32>
%76 = Concat i64 i32 %77, i32 %78
tmp_dword!13 = store i64 %76, i64 tmp_dword!10
br label %bb61
bb69:
%79 = Extract i3 of i64 %49 <2, 0>
%80 = i1 Eq i3 %79, -3
br i1 %80, label %bb70, label %bb71
bb70:
%82 = Extract i40 of i64 %57 <39, 0>
%83 = Extract i24 of i64 %58 <63, 40>
%81 = Concat i64 i40 %82, i24 %83
tmp_dword!14 = store i64 %81, i64 tmp_dword!10
br label %bb61
bb71:
%84 = Extract i3 of i64 %49 <2, 0>
%85 = i1 Eq i3 %84, -2
br i1 %85, label %bb74, label %bb75
bb72:
%96 = i64 Add i64 %98, 4
PC!13 = store i64 %96, i64 PC!12
br label %bb76
bb73:
br label %bb76
bb74:
%87 = Extract i48 of i64 %57 <47, 0>
%88 = Extract i16 of i64 %58 <63, 48>
%86 = Concat i64 i48 %87, i16 %88
tmp_dword!15 = store i64 %86, i64 tmp_dword!10
br label %bb61
bb75:
%90 = Extract i56 of i64 %57 <55, 0>
%91 = Extract i8 of i64 %58 <63, 56>
%89 = Concat i64 i56 %90, i8 %91
tmp_dword!16 = store i64 %89, i64 tmp_dword!10
br label %bb61
bb76:
PC!14 = phi ite %95 %96 %98
PC!15 = store i64 PC!14, i64 PC!14
PC!16 = store i64 PC!14, i64 PC!15
br label %bb77
bb77:
MEM = [9007199254740992, i64] Use [9007199254740992, i64] MEM!10
PC = i64 Use i64 PC!44
XREG = [32, i64] Use [32, i64] XREG!24
ret void
